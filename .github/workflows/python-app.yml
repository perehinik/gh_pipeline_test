name: GitHub pypeline test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5
        pip install pyinstaller
    - name: Build EXE
      run: |
        pyinstaller pypeline_test.spec
    - name: Go to dist folder
      run: |
        cd dist
        dir
        tar.exe -a -c -f pypeline_test.zip pypeline_test.exe
    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: dist/pypeline_test.zip
        retention-days: 5
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}_${{ github.run_id }}
        release_name: Release ${{ github.ref }}_${{ github.run_id }}
        draft: false
        prerelease: false
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/pypeline_test.zip
        asset_name: pypeline_test.zip
        asset_content_type: application/zip
    
#     - uses: actions/download-artifact@v3
#       with:
#         name: dist/pypeline_test.exe
